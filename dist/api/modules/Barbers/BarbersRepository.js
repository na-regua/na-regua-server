'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==='function')for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};Object.defineProperty(exports,'__esModule',{value:true});const multer_1=require('../../../config/multer');const index_1=require('../../../core/index');const index_2=require('../../../utils/index');const FilesSchema_1=require('../Files/FilesSchema');const Services_1=require('../Services');const Users_1=require('../Users');const Workers_1=require('../Workers');const BarbersSchema_1=require('./BarbersSchema');class BarbersRepository{index(_,res){return __awaiter(this,void 0,void 0,function*(){try{const barbers=yield BarbersSchema_1.BarbersModel.find();return res.status(200).json(barbers);}catch(err){return(0,index_1.errorHandler)(err,res);}});}show(_,res){return __awaiter(this,void 0,void 0,function*(){try{const barber=res.locals.barber;if(!barber){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.BARBER_NOT_FOUND);}yield barber.populate({path:'workers',populate:{path:'user',populate:{path:'avatar'}}});yield barber.populate({path:'services'});return res.status(200).json(barber);}catch(error){return(0,index_1.errorHandler)(error,res);}});}update(req,res){return __awaiter(this,void 0,void 0,function*(){try{const barber=res.locals.barber;if(!barber){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.BARBER_NOT_FOUND);}const body=req.body;yield barber.updateOne(body);return res.status(204).json(null);}catch(error){return(0,index_1.errorHandler)(error,res);}});}delete(_,res){return __awaiter(this,void 0,void 0,function*(){try{const barber=res.locals.barber;if(!barber){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.BARBER_NOT_FOUND);}yield barber.populateAll();yield barber.deleteOne().then(()=>__awaiter(this,void 0,void 0,function*(){const workers=yield Workers_1.WorkersModel.find({barber:barber._id});for(const worker of workers){yield Workers_1.WorkersModel.findByIdAndDelete(worker._id);}const services=yield Services_1.ServicesModel.find({barber:barber._id});for(const service of services){yield Services_1.ServicesModel.findByIdAndDelete(service._id);}const avatar=yield FilesSchema_1.FilesModel.findById(barber.avatar);if(avatar){yield avatar.deleteOne();yield(0,multer_1.cloudinaryDestroy)(avatar.filename);}const thumbs=yield FilesSchema_1.FilesModel.find({_id:{$in:barber.thumbs}});for(const thumb of thumbs){yield thumb.deleteOne();yield(0,multer_1.cloudinaryDestroy)(thumb.filename);}}));return res.status(204).json(null);}catch(err){return(0,index_1.errorHandler)(err,res);}});}completeProfile(req,res){return __awaiter(this,void 0,void 0,function*(){try{const barber=res.locals.barber;yield barber.updateOne({profileStatus:'completed'});return res.status(204).json(null);}catch(error){return(0,index_1.errorHandler)(error,res);}});}signUp(req,res){return __awaiter(this,void 0,void 0,function*(){try{const _a=req.body,{password,address,phone}=_a,body=__rest(_a,['password','address','phone']);const files=req.files;res.locals.cloudFiles=files;const createdFiles=[];const createdFilesSchema=[];for(const thumb of files){const file=yield FilesSchema_1.FilesModel.create({filename:thumb.filename,originalName:thumb.originalname,url:thumb.path,mimeType:thumb.mimetype});createdFiles.push(file._id);createdFilesSchema.push(file);res.locals.files=createdFilesSchema;}const [avatar,...thumbs]=createdFiles.map(file=>file._id);const parsedAddress=JSON.parse(address);const numPhone=+phone;const barber=yield BarbersSchema_1.BarbersModel.create(Object.assign({code:(0,index_2.generateRandomCode)(),thumbs,avatar,address:parsedAddress,phone:numPhone},body));if(!barber){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.BARBER_NOT_CREATED);}res.locals.barber=barber;const adminUser=yield Users_1.UsersModel.create({name:barber.name,email:barber.email,phone:barber.phone,password:password,role:'admin',avatar});if(!adminUser){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.USER_NOT_CREATED);}res.locals.user=adminUser;const adminWorker=yield Workers_1.WorkersModel.create({user:adminUser._id,barber:barber._id});if(!adminWorker){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_CREATED);}yield adminUser.updateOne({worker:adminWorker._id});res.locals.worker=adminWorker;const accessToken=yield adminUser.generateAuthToken();const updatedBarber=yield BarbersSchema_1.BarbersModel.findByIdAndUpdate(barber._id);return res.status(201).json({barber:updatedBarber,user:adminUser,accessToken});}catch(error){const {barber,user,worker}=res.locals;const cloudFiles=res.locals.cloudFiles;const files=res.locals.files;if(barber){yield barber.deleteOne();}if(user){yield user.deleteOne();}if(worker){yield worker.deleteOne();}if(files){files.map(file=>__awaiter(this,void 0,void 0,function*(){yield(0,multer_1.cloudinaryDestroy)(file.filename);yield file.deleteOne();}));}if(cloudFiles){cloudFiles.forEach(file=>__awaiter(this,void 0,void 0,function*(){yield(0,multer_1.cloudinaryDestroy)(file.filename);}));}return(0,index_1.errorHandler)(error,res);}});}openBarber(req,res){return __awaiter(this,void 0,void 0,function*(){try{return res.status(204).json(null);}catch(error){return(0,index_1.errorHandler)(error,res);}});}closeBarber(req,res){return __awaiter(this,void 0,void 0,function*(){try{return res.status(204).json(null);}catch(error){return(0,index_1.errorHandler)(error,res);}});}}exports.default=new BarbersRepository();