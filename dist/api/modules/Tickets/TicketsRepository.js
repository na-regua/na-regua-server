'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,'__esModule',{value:true});const index_1=require('../../../core/index');const TicketsSchema_1=require('./TicketsSchema');class TicketsRepository{index(req,res){return __awaiter(this,void 0,void 0,function*(){try{const params=req.query;const customers=yield TicketsSchema_1.TicketsModel.find().populate('user','name email').populate('queue','code').populate('servedBy','name email').sort({createdAt:-1});return res.status(200).json(customers);}catch(error){return(0,index_1.errorHandler)(error,res);}});}create(req,res){return __awaiter(this,void 0,void 0,function*(){try{const user=res.locals.user;const {queueId}=req.body;}catch(error){return(0,index_1.errorHandler)(error,res);}});}delete(req,res){return __awaiter(this,void 0,void 0,function*(){});}}exports.default=new TicketsRepository();