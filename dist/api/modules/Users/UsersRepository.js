'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,'__esModule',{value:true});const multer_1=require('../../../config/multer');const HttpException_1=require('../../../core/HttpException/HttpException');const SystemErrors_1=require('../../../core/SystemErrors/SystemErrors');const errorHandler_1=require('../../../core/errorHandler/errorHandler');const _1=require('.');const Files_1=require('../Files');const Twilio_1=require('../Twilio');const Barbers_1=require('../Barbers');class UsersRepository{list(_,res){return __awaiter(this,void 0,void 0,function*(){try{const users=yield _1.UsersModel.find().populate('avatar','-_id');return res.status(200).json(users);}catch(err){return(0,errorHandler_1.errorHandler)(err,res);}});}create(req,res){return __awaiter(this,void 0,void 0,function*(){try{const file=req.file;const body=req.body;if(!file){throw new HttpException_1.HttpException(400,SystemErrors_1.SYSTEM_ERRORS.FILE_NOT_FOUND);}const avatarFile=yield Files_1.FilesModel.create({original_name:file.originalname,filename:file.filename,url:file.path,mimetype:file.mimetype});body.avatar=avatarFile._id;const user=yield _1.UsersModel.create(body);yield user.populate('avatar','-_id');return res.status(201).json(user);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}update(req,res){return __awaiter(this,void 0,void 0,function*(){try{const user=res.locals.user;const body=req.body;yield user.updateOne(body);return res.status(204).json(null);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}delete(req,res){return __awaiter(this,void 0,void 0,function*(){try{const {id}=req.params;const user=yield _1.UsersModel.findById(id);if(!user){throw new HttpException_1.HttpException(400,SystemErrors_1.SYSTEM_ERRORS.USER_NOT_FOUND);}const avatarFile=yield Files_1.FilesModel.findById(user.avatar);if(avatarFile){yield(0,multer_1.cloudinaryDestroy)(avatarFile.filename);yield avatarFile.deleteOne();}yield user.deleteOne();return res.status(204).json(null);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}sendWhatsappCode(req,res){return __awaiter(this,void 0,void 0,function*(){try{const {phone}=req.body;yield _1.UsersModel.findByPhone(phone);yield Twilio_1.TwilioRepository.sendOTP(phone);return res.status(200).json({goToVerify:true});}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}verifySms(req,res){return __awaiter(this,void 0,void 0,function*(){try{const {code,phone}=req.body;const user=yield _1.UsersModel.findByPhone(phone);const verification=yield Twilio_1.TwilioRepository.verifyOTP(code,phone);if(verification instanceof Error){throw verification;}if(!verification||!verification.valid){throw new HttpException_1.HttpException(400,SystemErrors_1.SYSTEM_ERRORS.INVALID_CODE);}yield user.updateOne({verified:true});return res.status(200).json(verification);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}favoriteBarber(req,res){return __awaiter(this,void 0,void 0,function*(){try{const {barberId}=req.params;const user=res.locals.user;const barber=yield Barbers_1.BarbersModel.findById(barberId);if(!barber){throw new HttpException_1.HttpException(400,SystemErrors_1.SYSTEM_ERRORS.BARBER_NOT_FOUND);}const isFavorite=user.favorites&&user.favorites.some(fav=>fav._id.toString()===barberId);if(isFavorite){yield user.updateOne({$pull:{favorites:barberId}});}if(!isFavorite){yield user.updateOne({$push:{favorites:barberId}});}return res.status(204).json(null);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}listFavorites(req,res){return __awaiter(this,void 0,void 0,function*(){try{const user=res.locals.user;const barbers=yield Barbers_1.BarbersModel.find({_id:{$in:user.favorites}});yield Promise.all(barbers.map(barber=>__awaiter(this,void 0,void 0,function*(){yield barber.populateAll();})));return res.status(200).json(barbers);}catch(error){return(0,errorHandler_1.errorHandler)(error,res);}});}}exports.default=new UsersRepository();