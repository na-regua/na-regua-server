'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==='function')for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};Object.defineProperty(exports,'__esModule',{value:true});const multer_1=require('../../../config/multer');const index_1=require('../../../core/index');const Files_1=require('../Files');const Users_1=require('../Users');const WorkersSchema_1=require('./WorkersSchema');class WorkersRepository{index(req,res){return __awaiter(this,void 0,void 0,function*(){try{const query=req.query;const filters={};if(query.barberId){filters.barber=query.barberId;}const workers=yield WorkersSchema_1.WorkersModel.find(filters).populate({path:'user',populate:{path:'avatar'}});return res.status(200).json(workers);}catch(error){return(0,index_1.errorHandler)(error,res);}});}create(req,res){return __awaiter(this,void 0,void 0,function*(){try{const file=req.file;if(!file){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.FILE_NOT_FOUND);}const _a=req.body,{admin}=_a,body=__rest(_a,['admin']);const barber=res.locals.barber;const avatarFile=yield Files_1.FilesModel.create({filename:file.filename,originalName:file.originalname,url:file.path,mimeType:file.mimetype});body.avatar=avatarFile._id;body.role=!!admin?'admin':'worker';const workerUser=yield Users_1.UsersModel.create(body);if(!workerUser){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.USER_NOT_CREATED);}res.locals.workerUser=workerUser;const worker=yield WorkersSchema_1.WorkersModel.create({user:workerUser._id,barber:barber._id});if(!worker){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_CREATED);}yield workerUser.updateOne({worker:worker._id});res.locals.worker=worker;yield barber.updateOne({$push:{workers:worker._id}});return res.status(200).json(worker);}catch(error){const workerUser=res.locals.workerUser;const worker=res.locals.worker;if(workerUser){workerUser.deleteOne();}if(worker){worker.deleteOne();}return(0,index_1.errorHandler)(error,res);}});}update(req,res){return __awaiter(this,void 0,void 0,function*(){try{const body=req.body;if(body.phone){body.verified=false;}const file=req.file;const workerId=req.params.id;const worker=yield WorkersSchema_1.WorkersModel.findOne({_id:workerId});if(!worker){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_FOUND);}const workerUser=yield Users_1.UsersModel.findByIdAndUpdate(worker.user._id);if(!workerUser){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_FOUND);}const avatarFile=yield Files_1.FilesModel.findById(workerUser.avatar);if(file&&avatarFile){yield Promise.all([(0,multer_1.cloudinaryDestroy)(avatarFile.filename),avatarFile.updateOne({originalName:file.originalname,filename:file.filename,url:file.path,mimeType:file.mimetype})]);}const updatedWorkerUser=yield Users_1.UsersModel.findById(worker.user._id);return res.status(201).json(updatedWorkerUser);}catch(error){return(0,index_1.errorHandler)(error,res);}});}delete(req,res){return __awaiter(this,void 0,void 0,function*(){try{const barber=res.locals.barber;const workerId=req.params.id;const barberWorkers=yield WorkersSchema_1.WorkersModel.find({barber:barber._id});if(!workerId){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_FOUND);}if(!barberWorkers){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.NO_WORKERS_TO_DELETE);}if(barberWorkers.length===1){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.BARBER_SHOULD_HAVE_ONE_WORKER);}const workerToDelete=yield WorkersSchema_1.WorkersModel.findById(workerId);if(!workerToDelete){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.WORKER_NOT_FOUND);}const userToDelete=yield Users_1.UsersModel.findById(workerToDelete.user._id);if(!userToDelete){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.USER_NOT_FOUND);}const avatarFile=yield Files_1.FilesModel.findById(userToDelete.avatar);if(!avatarFile){throw new index_1.HttpException(400,index_1.SYSTEM_ERRORS.FILE_NOT_FOUND);}yield workerToDelete.deleteOne();yield userToDelete.deleteOne();yield avatarFile.deleteOne();yield(0,multer_1.cloudinaryDestroy)(avatarFile.filename);return res.status(200).json(null);}catch(error){return(0,index_1.errorHandler)(error,res);}});}}exports.default=new WorkersRepository();